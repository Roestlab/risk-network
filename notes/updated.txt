PROJECT NAME IDEA
=================
- RISK:
    ** RISK Infers Spatial Kinship **
    RISK Informs Spatial Kinship
    Regional Identification of Significant Kinships
    Regional Identification of Structural Kinships
    Regional Inference of Significant Kinships
    Reliable Inference of Subnetwork Kinship
    Reliable Inference of Spatial Kinship
    Regional Inference of Subnetwork Kinetics
    Regional Inference of Spatial Kinetics
- SPP: SAFE Plus Plus
- DANGER:
    Discovery Algorithm for Network Group Enrichment Regions
    Detection Algorithm for Network Group Enrichment Regions
    Data-driven Algorithm for Network Group Enrichment Recognition
    Dynamic Algorithm for Network Group Enrichment Revelation
    Deep Analysis Network Group Enrichment Resolver
    Discovery Approach for Network Group Enrichment Reading
    Deep Algorithm for Networked Group Enrichment Reconnaissance
    Data Analysis Network Group Enrichment Revelation
    Discovery Algorithm for Navigating Group Enrichment Research
    Data-driven Approach to Network Group Enrichment Revelation
    Data-driven Algorithms for Neighborhoods, Graphs, Exploration, and Research
    Deep Analytic Networks for Genomic Evolution Recognition
    Dynamic Assessment of Nodes, Gateways, Edges, and Routes
    Data Analysis for Network Growth, Expansion, and Reinforcement
    Discovery Algorithm for Network Genesis, Emergence, and Reconfiguration
    Deep Algorithmic Navigation of Genealogical Enrichment Relationships
    Data-driven Analysis of Network Group Ecosystems and Relations
    Discovery Algorithms for Network Geographies, Entanglements, and Repatternings
    Data Analytics for Networked Groups, Efficiencies, and Resiliencies
    Deep Analytic Network Guidance for Enrichment Realization

THINGS I UPDATED
================
1. 
    - In addition to computing the sum of dot products of the observed test statistic against the null distribution (randomized network), I've introduced:
	- Standard deviation of dot products in the observed test statistic against the null distribution
	- Z-score of dot products in the observed test statistic against the null distribution
    - Improved coloring with appropriate shading for less enriched nodes.
2. 
    - Permutation test: now significantly faster (metrics needed to quantify this improvement).
3.
    - Accepts more intuitive annotation file types:
        - JSON
        - CSV
        - TSV
        - Excel
    - Accepts more intuitive network file types:
        - Cytoscape
        - Cytoscape JSON
        - Gpickle
    - Accepts NetworkX
4.
    - Enhanced domain description generation using NLTK.
5.
    - More explicit method for removing highly inflated domains (using Z-score to identify outliers).
    - By inflated, I mean domains with an excessively high number of members.
    - Extremely large and spatially expansive clusters are usually the result of noisy data.
6.
    - Remove node significance if its closest edge with an enriched neighbor is greater than N STDEV of all edge lengths.
7.
    - Added new domain selection algorithms (original is Dijkstra):
        - Louvain
        - Label propagation
	- Markov clustering
	- Spinglass method
	- Walktrap method
8. 
    - Automatically compute domain thresholding across different linkages and metrics (default behavior).
9.
    - Add random seeding to key functions, enabling total reporduction of results
10. [BIG]
    - Enable the conversion of the input 2D network to 3D prior to computing neighborhoods.
        - This allows for a better spread of tightly packed nodes, facilitating a more optimal scan for local enrichment.
    - When plotting, convert of the 3D network back to a 2D plane.
11.
    - Enable surface depth of the spherical network, giving further depth on sphere surface for tight-clustering nodes.
    - This diminishes edge distance of nodes in a tight cluster, while expanding distances between sparsely connected node clusters
12.
    - Enable option to user to use edge weights to better refine node distancing prior to neighborhood computation.
13.
    - Add contours to the network, providing a simpler way to view regions of enrichment.
14.
    - Impute non-significant nodes' significance to their closest significant node.
    - Prune faraway significant nodes, enhancing cluster formation and visualization
15.
    - Automatically generate and position labels around the network, with non-intersecting arrows pointing from the labels to their respective clusters.
16.
    - Seamlessly interface with the plotter class, enabling graph instantiation, display, and export.
17
    - Multiprocessed permutation test, applicable in both Python and Jupyter environments
	- Enable selection of significant neighborhoods (cluster of nodes enriched for an annotation (let's say the clusters are genes and annotation is a GO term)) using P-value and FDR BH
18
    - Ability to color annotation arrows
19
    - Ability to add custom nodes, contours, and labels to the plot
20
    - Exports object instance attibutes as:
	- CSV
	- Text file
	- JSON
    - This enables users to keep track of prior configuration settings for reproducibility
21 
    - Network plotting
	- Ability to specify minimum and maximum cluster sizes to display. Anything beyond range is not plotted
	- Specify a maximum distance from a node to find its neighbors
